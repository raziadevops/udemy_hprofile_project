# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  Testing:
    runs-on: ubuntu-latest
    steps:
      - name: code checkout
        uses: actions/checkout@v4
        
      - name: Maven test
        run: mvn test
      - name: checkstyle
        run: mvn checkstyle:checkstyle
      # Setup java 11 to be default (sonar-scanner requirement as of 5.x)
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
      # Setup sonar scanner
      - name: Set up SonarQube scanner
        uses: warchant/setup-sonar-scanner@v7

        # Run sonar scanner
      - name: Run SonarQube scanner
        run: sonar-scanner
           -Dsonar.host.url=${{ secrets.SONAR_URL }}
           -Dsonar.login=${{ secrets.SONAR_TOKEN }}
           -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
           -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
           -Dsonar.sources=src/
           -Dsonar.junit.reportPaths=target/surefire-reports/
           -Dsonar.jacoco.reportPaths=target/jacoco.exec
           -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
           -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/
           #-Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml







        




